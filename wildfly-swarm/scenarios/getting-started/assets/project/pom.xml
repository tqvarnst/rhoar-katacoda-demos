<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016-2017 Red Hat, Inc, and individual contributors.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.openshift</groupId>
    <artifactId>booster-parent</artifactId>
    <version>10</version>
  </parent>

  <groupId>io.openshift.boosters</groupId>
  <artifactId>wfswarm-health-check</artifactId>
  <version>7.0.0-redhat-2</version>
  <packaging>war</packaging>

  <name>WildFly Swarm Booster - Health Check Mission</name>

  <properties>
    <version.wildfly.swarm>7.0.0.redhat-6</version.wildfly.swarm>
    <version.resteasy>3.0.19.Final</version.resteasy>
    <version.override.jackson>2.7.7</version.override.jackson>
    <!-- Licenses - plugins -->
    <version.wildfly.swarm.fraction.plugin>61</version.wildfly.swarm.fraction.plugin>
    <version.xml-maven-plugin>1.0.1</version.xml-maven-plugin>
    <version.license-maven-plugin>1.13</version.license-maven-plugin>
    <version.wildfly-licenses-plugin>1.0.1</version.wildfly-licenses-plugin>
    <!-- Licenses - JBoss repo URL used in custom-settings -->
    <jboss.repo.url>https://maven.repository.redhat.com/ga/</jboss.repo.url>
    <licenses.pom.file>pom.xml</licenses.pom.file>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>bom</artifactId>
        <version>${version.wildfly.swarm}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>bom-certified</artifactId>
        <version>${version.wildfly.swarm}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>monitor</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>cdi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.core</groupId>
      <artifactId>wildfly-controller-client</artifactId>
      <version>2.2.1.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>${version.resteasy}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>arquillian</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>1.1.12.Final</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>wildfly-swarm-plugin</artifactId>
        <version>${version.wildfly.swarm}</version>
        <executions>
          <execution>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <profile>
      <id>openshift</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>resource</goal>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <generator>
                <includes>
                  <include>wildfly-swarm</include>
                </includes>
                <excludes>
                  <exclude>webapp</exclude>
                </excludes>
              </generator>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>openshift-it</id><build>
        <plugins>
          <!--
            - 1.
            -
            - For running the test, we need the Jackson dependencies in a higher version than what is brought in by Swarm.
            - Unfortunately, Failsafe can't be configured do add specific artifacts to the test classpath, just files,
            - so we need to download the dependencies manually. This is what this plugin execution does.
            -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-jackson-dependencies-for-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <stripVersion>true</stripVersion>
                  <artifactItems>
                    <artifactItem>
                      <groupId>com.fasterxml.jackson.core</groupId>
                      <artifactId>jackson-core</artifactId>
                      <version>${version.override.jackson}</version>
                    </artifactItem>
                    <artifactItem>
                      <groupId>com.fasterxml.jackson.core</groupId>
                      <artifactId>jackson-annotations</artifactId>
                      <version>${version.override.jackson}</version>
                    </artifactItem>
                    <artifactItem>
                      <groupId>com.fasterxml.jackson.core</groupId>
                      <artifactId>jackson-databind</artifactId>
                      <version>${version.override.jackson}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <!--
                - 2.
                -
                - These artifacts are added to the test classpath automatically because they are project dependencies.
                - However, they are of too old versions, so we remove them here and add correct versions later.
                -->
              <classpathDependencyExcludes>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-core</classpathDependencyExclude>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-annotations</classpathDependencyExclude>
                <classpathDependencyExclude>com.fasterxml.jackson.core:jackson-databind</classpathDependencyExclude>
              </classpathDependencyExcludes>
              <!--
                - 3.
                -
                - And here, we add the correct versions of the artifacts to test classpath. Unfortunately,
                - this is only possible by file paths, not by artifact coordinates.
                -->
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.directory}/dependency/jackson-core.jar</additionalClasspathElement>
                <additionalClasspathElement>${project.build.directory}/dependency/jackson-annotations.jar</additionalClasspathElement>
                <additionalClasspathElement>${project.build.directory}/dependency/jackson-databind.jar</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

      <!-- Activate this profile to generate licenses deliverables -->
      <!-- Note that we cannot use "licenses" profile id as it's already defined by booster parent -->
      <profile>
         <id>generate-licenses</id>
         <!-- Do not use system property activation - this profile must be inactive when this pom is used during license generation -->
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-resources-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>prepare-template</id>
                      <phase>validate</phase>
                      <goals>
                        <goal>copy-resources</goal>
                      </goals>
                      <inherited>false</inherited>
                      <configuration>
                        <outputDirectory>${basedir}/target</outputDirectory>
                        <resources>
                          <resource>
                            <directory>src/main/resources</directory>
                            <filtering>true</filtering>
                          </resource>
                        </resources>
                        <escapeString>\</escapeString>
                      </configuration>
                    </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.wildfly.swarm</groupId>
                  <artifactId>wildfly-swarm-fraction-plugin</artifactId>
                  <version>${version.wildfly.swarm.fraction.plugin}</version>
                  <executions>
                     <execution>
                        <id>generate-licenses</id>
                        <goals>
                           <goal>generate-licenses</goal>
                        </goals>
                        <configuration>
                           <licensesTemplate>${project.build.directory}/licenses/licenses-project-template.xml</licensesTemplate>
                           <downloadSources>true</downloadSources>
                           <downloadPoms>true</downloadPoms>
                           <!-- Use custom settings to point to the local maven repo cache -->
                           <userSettings>${project.build.directory}/licenses/custom-settings.xml</userSettings>
                           <pomFile>${licenses.pom.file}</pomFile>
                           <excludes>
                              <exclude>org/codehaus/plexus/plexus/1.0.4/.*</exclude>
                           </excludes>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <configuration>
                     <descriptors>
                        <descriptor>src/assembly/assembly.xml</descriptor>
                     </descriptors>
                  </configuration>
                  <executions>
                     <execution>
                        <id>assemble</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                        <configuration>
                           <tarLongFileMode>gnu</tarLongFileMode>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

  </profiles>

  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jboss-enterprise-maven-repository</id>
      <url>https://maven.repository.redhat.com/ga/</url>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jboss-enterprise-maven-repository-earlyaccess</id>
      <url>https://maven.repository.redhat.com/earlyaccess/all/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jboss-enterprise-maven-repository</id>
      <url>https://maven.repository.redhat.com/ga/</url>
    </pluginRepository>
    <pluginRepository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jboss-enterprise-maven-repository-earlyaccess</id>
      <url>https://maven.repository.redhat.com/earlyaccess/all/</url>
    </pluginRepository>
  </pluginRepositories>

</project>
